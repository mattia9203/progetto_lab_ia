# -*- coding: utf-8 -*-
"""utils.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18RL8DHqkLnLt9Apg21xbkbzLe2pam4bK
"""

import torch
import torchvision
from torch.utils.data import DataLoader
from sklearn.metrics import precision_score, recall_score, f1_score, accuracy_score
percorso =  "/content/drive/MyDrive/Progetto_laboratorio"
import sys
sys.path.append(percorso)
from dataset import Dataset


def save_checkpoint(state, filename="my_checkpoint.pth.tar"):
    print("=> Saving checkpoint")
    torch.save(state, filename)


def load_checkpoint(checkpoint, model):
    print("=> Loading checkpoint")
    model.load_state_dict(checkpoint["state_dict"])

def check_precision(y_true, y_pred):
    return precision_score(y_true, y_pred, average='weighted')

def check_recall(y_true, y_pred):
    return recall_score(y_true, y_pred, average='weighted')

def check_f1(y_true, y_pred):
    return f1_score(y_true, y_pred, average='weighted')

def check_accuracy(y_true, y_pred):
    return accuracy_score(y_true, y_pred)

def check_metrics(y_true, y_pred):
    precision = check_precision(y_true, y_pred)
    recall = check_recall(y_true, y_pred)
    f1 = check_f1(y_true, y_pred)
    accuracy = check_accuracy(y_true, y_pred)
    print("Precision : ",precision)
    print("Recall : ",recall)
    print("F1 : ",f1)
    print("Accuracy : ",accuracy)
    return precision, recall, f1, accuracy

def get_loaders(percorso,batch_size,train_transform,val_transform,num_workers=4,pin_memory=True):

  train_ds = Dataset(root = percorso + "/Dataset/train",transform = train_transform)
  val_ds = Dataset(root = percorso + "/Dataset/validation" , transform = val_transform)

  train_loader = DataLoader(train_ds, batch_size=batch_size, shuffle=False, num_workers=num_workers, pin_memory=pin_memory)
  val_loader = DataLoader(val_ds, batch_size=batch_size, shuffle=False, num_workers=num_workers, pin_memory=pin_memory)

  return train_loader, val_loader
